#https://leetcode.com/problems/largest-divisible-subset/
class Solution(object):
def largestDivisibleSubset(nums: List[int]) -> List[int]:
    if not nums:
        return []
    nums.sort()
    n = len(nums)
    dp = [1] * n
    max_size = 1
    for i in range(1, n):
        for j in range(i):
            if nums[i] % nums[j] == 0:
                dp[i] = max(dp[i], dp[j] + 1)
        max_size = max(max_size, dp[i])
    return max_size

print(largestDivisibleSubset([1,2,3]))
print(largestDivisibleSubset([1,2,4,8]))

       
