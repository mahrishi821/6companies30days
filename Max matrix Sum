#https://leetcode.com/problems/maximum-matrix-sum/
class Solution:
    def maxMatrixSum(self, matrix: List[List[int]]) -> int:
        n, m = len(matrix), len(matrix[0])
        for i in range(1, n):
            matrix[i][0] += matrix[i - 1][0]
        for j in range(1, m):
            matrix[0][j] += matrix[0][j - 1]
        for i in range(1, n):
            for j in range(1, m):
                matrix[i][j] += matrix[i - 1][j] + matrix[i][j - 1] - matrix[i - 1][j - 1]
        max_sum = float('-inf')
        for i in range(n):
            for j in range(m):
                for x in range(i, n):
                    for y in range(j, m):
                        sub_matrix_sum = matrix[x][y]
                        if i > 0:
                            sub_matrix_sum -= matrix[i - 1][y]
                        if j > 0:
                            sub_matrix_sum -= matrix[x][j - 1]
                        if i > 0 and j > 0:
                            sub_matrix_sum += matrix[i - 1][j - 1]
                        max_sum = max(max_sum, sub_matrix_sum)
        return max_sum
       
